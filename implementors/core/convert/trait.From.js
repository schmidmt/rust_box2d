(function() {var implementors = {};
implementors["wrapped2d"] = [{"text":"impl From&lt;Vec2&gt; for [f32; 2]","synthetic":false,"types":[]},{"text":"impl From&lt;[f32; 2]&gt; for Vec2","synthetic":false,"types":[]},{"text":"impl From&lt;Vec2&gt; for Vector2&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Vector2&lt;f32&gt;&gt; for Vec2","synthetic":false,"types":[]},{"text":"impl From&lt;Vec2&gt; for Point2&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Point2&lt;f32&gt;&gt; for Vec2","synthetic":false,"types":[]},{"text":"impl From&lt;Vec2&gt; for Vector2&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Vector2&lt;f32&gt;&gt; for Vec2","synthetic":false,"types":[]},{"text":"impl From&lt;Vec2&gt; for Point2&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl From&lt;Point2&lt;f32&gt;&gt; for Vec2","synthetic":false,"types":[]},{"text":"impl From&lt;Rot&gt; for Rotation2&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a Rotation2&lt;f32&gt;&gt; for Rot","synthetic":false,"types":[]},{"text":"impl From&lt;Rot&gt; for Basis2&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a Basis2&lt;f32&gt;&gt; for Rot","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a Transform&gt; for Isometry2&lt;f32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; From&lt;&amp;'a Isometry2&lt;f32&gt;&gt; for Transform","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()